package tw.com.gear.prjmarcorder;

import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.os.Build;

//購物車頁面，會使用到 ImageTextAdapter產生List
public class ActPageCart extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.act_page_cart);
		ActMain.whoIsActivity = "Cart";
		InitialComponent();
		// ////////////////////////////////////////////////////////////////
		// 判斷是否有登入帳號，有登入就要顯示加入夢幻餐車的按鈕
		SharedPreferences sharePre = getSharedPreferences("T1", 0);
		String account = sharePre.getString("id", "");
		if (!account.equals(""))
			btnDreamCart.setVisibility(View.VISIBLE);
		// //////////////////////////////////////////////////////////////
		ActMain.orderedIconList = new ArrayList<Bitmap>();

		ActMain.orderedIconList = findIconList();

		findViews();
	}

	// 找出相對應的Icon加入iconList來顯示
	private ArrayList<Bitmap> findIconList() {
		ArrayList<Bitmap> iconList = new ArrayList<Bitmap>();
		for (OrderItem i : ActMain.myCart.getOrderList()) {
			if (i.getType().equals(ActMain.foodSetString)) {// 加入套餐的圖片
				iconList.add(((FoodSet) ActMain.foodSetFactoryHttpList
						.findBySerial(i.getSerial())).getIcon());
			} else if (!i.getType().equals(ActMain.foodSetString)) {// 加入單點的圖片
				iconList.add(((Food) ActMain.foodFactoryHttpList.findBySerial(i
						.getSerial())).getIcon());
			}
		}
		return iconList;
	}

	private void findViews() {
		listItem = (ListView) findViewById(R.id.listAPCItem);
		listItem.setAdapter(new ImageTextAdapter(this, ActMain.myCart
				.getOrderList(), ActMain.orderedIconList));
		// Toast.makeText(ActPageCart.this,
		// "有 "+ActOrder.myCart.getOrderList().size()+" 項商品",
		// Toast.LENGTH_LONG).show();
		listItem.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TextView textView = (TextView) ((LinearLayout)
				// view).getChildAt(1);

				// Toast.makeText(getApplicationContext(), textView.getText(),
				// Toast.LENGTH_SHORT).show();
			}
		});
	}

	// 檢查現在網路有沒有連線的方法
	public boolean checkInternet(android.content.Context context) {
		boolean result = false;
		ConnectivityManager connManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo info = connManager.getActiveNetworkInfo();
		if (info == null || !info.isConnected()) {
			result = false;
		} else {
			if (!info.isAvailable()) {
				result = false;
			} else {
				result = true;
			}
		}
		return result;
	}

	// 返回點餐畫面
	OnClickListener btnCancel_Click = new OnClickListener() {
		public void onClick(View arg0) {
			String upOrDown = getIntent().getStringExtra("upOrDown");
			ActMain.orderedIconList.clear();
			finish();

			if (upOrDown.equals("up")) {
				// 動畫由左至右
				int version = Integer.valueOf(android.os.Build.VERSION.SDK_INT);
				if (version >= 5) {
					overridePendingTransition(R.anim.zoomin2, R.anim.zoomout2);
				}
			} else if (upOrDown.equals("down")) {
				//動畫由上至下
				int version = Integer.valueOf(android.os.Build.VERSION.SDK_INT);
				if (version >= 5) {
					overridePendingTransition(R.anim.zoomstopmove,
							R.anim.zoomoutfrombottom100);
				}
			}
		}
	};
	// 確認訂單
	OnClickListener btnOk_Click = new OnClickListener() {
		public void onClick(View arg0) {
			if (!(ActMain.myCart.getOrderList().size() > 0)) {
				MyToast.Show(ActPageCart.this, "您尚未選取餐點");
				return;
			}
			Intent intent = new Intent(ActPageCart.this, ActOrdersConfirm.class);
			startActivity(intent);
			ActMain.orderedIconList.clear();
			finish();
			
			// 動畫右至左
			int version = Integer.valueOf(android.os.Build.VERSION.SDK_INT);
			if (version >= 5) {
				overridePendingTransition(R.anim.zoomin, R.anim.zoomout);
				// 此為自訂的動畫效果，下面兩個為系統的動畫效果
				// overridePendingTransition(android.R.anim.fade_in,android.R.anim.fade_out);
				// overridePendingTransition(android.R.anim.slide_in_left,android.R.anim.slide_out_righ);
			}
		}
	};
	// 選擇餐車確認
	DialogInterface.OnClickListener dreamCartCofirm_Click = new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {
			// 把購物車內容轉成jsonCode存上雲端資料庫
			myDialog3 = ProgressDialog.show(ActPageCart.this, "連線中", "請稍後...",
					true, true, new DialogInterface.OnCancelListener() {
						public void onCancel(DialogInterface dialog) {
							myDialog3.dismiss();
						}
					});
			myDialog3.setCanceledOnTouchOutside(false);
			new Thread() {
				public void run() {
					try {
						dreamCartJsonStr[dreamCartJsonStrIndex] = JsonFactory
								.GetJsonFromDreamCart(ActMain.myCart
										.getOrderList());
						String totalJsonStr = "";
						for (int i = 0; i < dreamCartJsonStr.length; i++) {
							totalJsonStr += dreamCartJsonStr[i] + "@";
						}
						// 上傳所有夢幻餐車資料
						URL url = new URL(ActMain.webpage);
						SharedPreferences sharePre = getSharedPreferences("T1",
								0);
						String account = sharePre.getString("id", "");
						String responseStr = new DataBaseManagement()
								.upLoadDreamCart(
										url,
										account,
										totalJsonStr.substring(0,
												totalJsonStr.length() - 1))
								.toString().trim();

						dreamCarts.clear();
						tt = responseStr;
						Message msg = new Message();
						msg.what = GUI_OK;
						ActPageCart.this.myMessageHandler2.sendMessage(msg);
					} catch (Exception e) {

					} finally {
						myDialog3.dismiss();
					}
				}
			}.start();
		}
	};
	// 選擇餐車取消
	DialogInterface.OnClickListener dreamCartCencle_Click = new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {

		}
	};

	String tt = "";
	// 加入夢幻餐車的細項選擇
	int dreamCartJsonStrIndex = 0;
	DialogInterface.OnClickListener dreamCartDialog_click = new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {
			dreamCartJsonStrIndex = which;
			if (dreamCarts.get(which).size() > 0) {
				String cartsTmp = "";
				for (OrderItem o : dreamCarts.get(which)) {
					// 顯示餐車內所有食物資訊
					cartsTmp += o.getName() + ":" + o.getSubFoodName() + "x"
							+ o.getQuantity() + "\r\n";
				}

				Builder build = new AlertDialog.Builder(ActPageCart.this)
						.setIcon(R.drawable.marcordericon2)
						.setTitle("此餐車內已有餐點，確定要覆蓋嗎?").setMessage(cartsTmp)
						.setNegativeButton("確定", dreamCartCofirm_Click)
						.setNeutralButton("取消", dreamCartCencle_Click);
				Dialog d = build.create();
				d.show();
			} else {
				// 把購物車內容轉成jsonCode存上雲端資料庫
				myDialog2 = ProgressDialog.show(ActPageCart.this, "連線中",
						"請稍後...", true, true,
						new DialogInterface.OnCancelListener() {
							public void onCancel(DialogInterface dialog) {
								myDialog2.dismiss();
							}
						});
				myDialog2.setCanceledOnTouchOutside(false);
				new Thread() {
					public void run() {
						try {
							dreamCartJsonStr[dreamCartJsonStrIndex] = JsonFactory
									.GetJsonFromDreamCart(ActMain.myCart
											.getOrderList());
							String totalJsonStr = "";
							for (int i = 0; i < dreamCartJsonStr.length; i++) {
								totalJsonStr += dreamCartJsonStr[i] + "@";
							}
							// 上傳所有夢幻餐車資料
							URL url = new URL(ActMain.webpage);
							SharedPreferences sharePre = getSharedPreferences(
									"T1", 0);
							String account = sharePre.getString("id", "");
							String responseStr = new DataBaseManagement()
									.upLoadDreamCart(
											url,
											account,
											totalJsonStr.substring(0,
													totalJsonStr.length() - 1))
									.toString().trim();

							dreamCarts.clear();
							tt = responseStr;
							Message msg = new Message();
							msg.what = GUI_OK;
							ActPageCart.this.myMessageHandler2.sendMessage(msg);
						} catch (Exception e) {

						} finally {
							myDialog2.dismiss();
						}
					}
				}.start();
			}
		}
	};
	Handler myMessageHandler2 = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			// super.handleMessage(msg);
			switch (msg.what) {
			case GUI_OK:
				if (tt.equals("true"))
					MyToast.Show(ActPageCart.this, "加入完成");

			}
		}
	};
	Handler myMessageHandler1 = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			// super.handleMessage(msg);
			switch (msg.what) {
			case GUI_OK:
				String[] list = new String[dreamCarts.size()];
				for (int i = 0; i < dreamCarts.size(); i++) {
					list[i] = "餐車" + (i + 1);
				}
				Builder build = new AlertDialog.Builder(ActPageCart.this)
						.setIcon(R.drawable.marcordericon2).setTitle("請選擇")
						.setItems(list, dreamCartDialog_click);
				Dialog d = build.create();
				d.show();
			}
		}
	};
	// 加入夢幻餐車按鈕事件
	ProgressDialog myDialog1;
	ProgressDialog myDialog2;
	ProgressDialog myDialog3;
	Thread myThread1;
	Thread myThread2;
	Thread myThread3;
	boolean run_Thread = true;// 控制thread被中斷後不要在執行下去
	private static final int GUI_OK = 0x101;// handler的驗證碼
	String[] dreamCartJsonStr;// 夢幻餐車陣列
	ArrayList<ArrayList<OrderItem>> dreamCarts = new ArrayList<ArrayList<OrderItem>>();// 夢幻餐車集合
	OnClickListener btnDreamCart_Click = new OnClickListener() {
		public void onClick(View v) {
			if (ActMain.myCart.getOrderList().size() == 0) {
				MyToast.Show(ActPageCart.this, "您尚未點選餐點!");
				return;
			}
			// 判斷連線狀態
			if (!checkInternet(ActPageCart.this) == true) {
				MyToast.Show(ActPageCart.this,
						"偵測到網路連線狀況不穩！\n請檢查您的網路是否有連線或開啟了飛航模式。");
				return;
			}

			myDialog1 = ProgressDialog.show(ActPageCart.this, "連線中", "請等待...",
					true, true, new DialogInterface.OnCancelListener() {
						public void onCancel(DialogInterface dialog) {
							run_Thread = false;
							myThread1.interrupt();
							myDialog1.dismiss();
						}
					});
			myDialog1.setCanceledOnTouchOutside(false);
			myThread1 = new Thread() {
				public void run() {
					try {
						// 1.先收尋雲端資料庫，找出這個會員的夢幻餐車資料
						URL url = new URL(ActMain.webpage);
						SharedPreferences sharePre = getSharedPreferences("T1",
								0);
						String account = sharePre.getString("id", "");
						String dreamCartStr = new DataBaseManagement()
								.downLoadDreamCart(url, account).toString()
								.trim();
						dreamCartJsonStr = dreamCartStr.split("@");
						// 2.將餐車資料轉換成ArrayList<OrderItem>物件
						dreamCarts.clear();
						for (int i = 0; i < dreamCartJsonStr.length; i++) {
							dreamCarts.add(JsonFactory
									.GetDreamCart(dreamCartJsonStr[i]));
						}
						if (run_Thread) {
							Message msg = new Message();
							msg.what = GUI_OK;
							ActPageCart.this.myMessageHandler1.sendMessage(msg);
						}
					} catch (Exception e) {

					} finally {

						myDialog1.dismiss();
					}
				}
			};
			myThread1.start();
		}
	};

	@Override
	protected void onResume() {
		int total = 0;
		for (OrderItem o : ActMain.myCart.getOrderList()) {
			if (o.getAttrsState() == true) {
				total += o.getPrice() * o.getQuantity() + o.getAttrsPrice()
						* o.getQuantity();
			} else {
				total += o.getPrice() * o.getQuantity();
			}
		}
		txtMsg.setText("您的取餐方式：" + ActMain.myCart.getOrderType()
				+ "\r\n您的預計取餐時間：" + ActMain.myCart.getTime().substring(5, 16)
				+ "\r\n總計：" + total + "元");
		listItem.invalidateViews();
		super.onResume();
	}

	private void InitialComponent() {
		btnBack = (Button) findViewById(R.id.btnAPCCencel);
		btnBack.setOnClickListener(btnCancel_Click);
		btnOk = (Button) findViewById(R.id.btnAPCOk);
		btnOk.setOnClickListener(btnOk_Click);
		txtMsg = (TextView) findViewById(R.id.txtAPCMsg1);// 點餐資訊(訂購時間日期，取餐方式.....)
		btnDreamCart = (Button) findViewById(R.id.btnAPCDreamCart);
		btnDreamCart.setOnClickListener(btnDreamCart_Click);
	}

	Button btnBack;
	Button btnOk;
	TextView txtMsg;
	ListView listItem;
	Button btnDreamCart;

}
